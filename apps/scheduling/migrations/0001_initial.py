# Generated by Django 5.2.6 on 2025-09-10 18:31

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cards', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchedulingService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('timezone', models.CharField(max_length=64)),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('type', models.CharField(choices=[('local', 'Local'), ('remote', 'Remote'), ('onsite', 'Onsite')], default='remote', max_length=10)),
                ('video_link_template', models.CharField(blank=True, max_length=200)),
                ('buffer_before', models.PositiveIntegerField(default=0)),
                ('buffer_after', models.PositiveIntegerField(default=0)),
                ('lead_time_min', models.PositiveIntegerField(default=0)),
                ('cancel_min', models.PositiveIntegerField(default=0)),
                ('resched_min', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='cards.card')),
            ],
        ),
        migrations.CreateModel(
            name='CustomForm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('schema_json', models.JSONField(default=dict)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.schedulingservice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_name', models.CharField(max_length=120)),
                ('user_email', models.EmailField(max_length=254)),
                ('user_phone', models.CharField(blank=True, max_length=40)),
                ('start_at_utc', models.DateTimeField()),
                ('end_at_utc', models.DateTimeField()),
                ('timezone', models.CharField(max_length=64)),
                ('location_choice', models.CharField(choices=[('local', 'Local'), ('remote', 'Remote'), ('onsite', 'Onsite')], default='remote', max_length=10)),
                ('address_json', models.JSONField(blank=True, default=dict)),
                ('form_answers_json', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.schedulingservice')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceAvailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rule_type', models.CharField(choices=[('weekly', 'Weekly'), ('date_override', 'Date Override'), ('holiday', 'Holiday')], max_length=20)),
                ('weekday', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('timezone', models.CharField(blank=True, max_length=64)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='scheduling.schedulingservice')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceGalleryItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='services/gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('order', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduling.schedulingservice')),
            ],
        ),
        migrations.AddIndex(
            model_name='schedulingservice',
            index=models.Index(fields=['card', 'is_active'], name='scheduling__card_id_a49b14_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['service', 'start_at_utc'], name='scheduling__service_996e5c_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status'], name='scheduling__status_1008cc_idx'),
        ),
        migrations.AddIndex(
            model_name='serviceavailability',
            index=models.Index(fields=['service', 'rule_type'], name='scheduling__service_aa9cb7_idx'),
        ),
        migrations.AddIndex(
            model_name='servicegalleryitem',
            index=models.Index(fields=['service', 'order'], name='scheduling__service_17c417_idx'),
        ),
    ]
